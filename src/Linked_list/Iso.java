package Linked_list;

import javax.crypto.*;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import java.io.*;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import static javax.crypto.Cipher.DECRYPT_MODE;
import static javax.crypto.Cipher.ENCRYPT_MODE;

public class Iso {

    private static byte[] iso9797Alg3(String input, byte[] keyA, byte[] rightKey) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, InvalidAlgorithmParameterException, IllegalBlockSizeException, BadPaddingException {
        Cipher cipher = iso9797Alg3DesCipher(keyA, ENCRYPT_MODE);
        Cipher cipherPrim = iso9797Alg3DesCipher(rightKey, DECRYPT_MODE);

        // ISO 9797 initial transformation no.1, pt1: ISO 7816-4 padding
        byte[] padded = AuxUtils.h2b(input);
        // ISO 9797 initial transformation no.1, pt2: DES/CBC Encryption of all the blocks with K
        byte[] cbcEncrypted = cipher.doFinal(padded, 0, padded.length);
        System.out.println("STEP1 DPAS + CBC encrypted: " + AuxUtils.b2h(cbcEncrypted));

        //debug encrypt wit ecb
        ;

        // ISO 9797 output transformation no.3, pt1: DES Decryption of the last block with K'
        byte[] afterOutputTransformsFirstPhase = cipherPrim.doFinal(cbcEncrypted, cbcEncrypted.length - 8, 8);
        System.out.println("STEP2 DPAS: afterOutPut " + AuxUtils.b2h(afterOutputTransformsFirstPhase));
        // ISO 9797 output transformation no.3, pt2: DES Encryption of the last block with K
        byte[] ret = cipher.doFinal(afterOutputTransformsFirstPhase, 0, 8);
        System.out.println("STEP3 DPAS: " + AuxUtils.b2h(ret));
        return ret;
    }

    private static Cipher iso9797Alg3DesCipher(byte[] bytes, int encryptMode) throws NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeyException, InvalidAlgorithmParameterException {
        SecretKey key = new SecretKeySpec(bytes, "DES");
        Cipher cipher = Cipher.getInstance("DES/CBC/NoPadding");
        cipher.init(encryptMode, key, new IvParameterSpec(new byte[8]));
        return cipher;
    }

    private static String iso9797Alg3(String joinedKeys, String input) throws IllegalBlockSizeException, InvalidKeyException, BadPaddingException, NoSuchAlgorithmException, NoSuchPaddingException, InvalidAlgorithmParameterException {
        byte[] leftKey = AuxUtils.h2b(joinedKeys.substring(0, 16));
        byte[] rightKey = AuxUtils.h2b(joinedKeys.substring(16));

        return AuxUtils.b2h(iso9797Alg3(input, leftKey, rightKey));
    }

    private static byte[] iso7816d4Pad(byte[] input) {
        int remainder = (((-(input.length + 1)) % 8) + 8) % 8;
        return AuxUtils.bconcat(input, (byte) 0x80, AuxUtils.bdup(remainder, (byte) 0x00));
    }

    private static byte[] iso7816d4Pad_t(byte[] input) {
        int paddedLen = input.length + 1;
        int remainder = ((paddedLen + 7) / 8) * 8 - paddedLen;
        return AuxUtils.bconcat(input, (byte) 0x80, AuxUtils.bdup(remainder, (byte) 0x00));
    }


    public static int b2s(byte... b) {
        return ((0xFF & b[0]) << 8) | ((0xFF & b[1]));

    }

    public static int b2i(byte... b) {
        return ((0xFF & b[0]) << 24) | ((0xFF & b[1]) << 16) | ((0xFF & b[2]) << 8) | ((0xFF & b[3]));
    }

    public static List<String> convertByteArrayToArrayList(byte[] replenishBundleBytes) throws IOException {
        List<String> replenishmentBundle = new ArrayList<>();
        ByteArrayInputStream bais = new ByteArrayInputStream(replenishBundleBytes);
        DataInputStream in = new DataInputStream(bais);
        while (in.available() > 0) {
            String element = in.readUTF();
            replenishmentBundle.add(element);
        }
        return replenishmentBundle;
    }

    public static byte[] convertArrayListToByteArray(List<String> replenishmentBundles) {
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        DataOutputStream out = new DataOutputStream(baos);
        for (String element : replenishmentBundles) {
            try {
                out.writeUTF(element);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        byte[] bytes = baos.toByteArray();
        return bytes;
    }


    public static void main(String[] args) throws BadPaddingException, InvalidAlgorithmParameterException, NoSuchAlgorithmException, IllegalBlockSizeException, NoSuchPaddingException, InvalidKeyException, IOException {
        String otpKey = "3048AAF014DBE1B812427447BE870A8D";
        String otpKey2 = "3049aaf114dae1b913437447be860a8d";
        String otpKey4 = "3049AAF114DAE1B913437447BE860A8D";
        String rawData = "00000000800008400102030400012012C0000000B0008000";
        String rawData2 = "00000000800008400102030400012012C0000000B0008000";
        String result2 = "bb9415fb55155ec1";
        String jsss
        System.out.println(AuxUtils.i2b(1).length + " -----");
        System.out.println(Integer.parseInt("000A", 16));
        List<String> list = new ArrayList<>();
        list.add(jsss);
        byte[] convert = convertArrayListToByteArray(list);
        System.out.println(Arrays.toString(convert));
        List<String> sss = convertByteArrayToArrayList(convert);
        System.out.println(sss.get(0));
//        System.out.println(AuxUtils.b2s(AuxUtils.h2b("000D")));
//
//
        System.out.println(AuxUtils.b2s(AuxUtils.h2b("001C")));
        //AuxUtils.b2h(Iso9797Util.iso7816d4Pad(AuxUtils.h2b(data)))
//
//
        System.out.println("-----   " + AuxUtils.b2h(AuxUtils.h2b("B64040000000000080000000000000000840084015082100010203042200000000000000")[28]));
        System.out.println(AuxUtils.b2h((byte) 34));
        System.out.println(AuxUtils.h2b("00000000800008400102030400012012C0000000B00080008000000000000000").length + "padded");
        System.out.println(AuxUtils.h2b("00000000800008400102030400012012C0000000B0008000").length + "not padded");
        byte[] padded = iso7816d4Pad(AuxUtils.h2b(rawData));
        byte[] padded2 = iso7816d4Pad_t(AuxUtils.h2b(rawData));
        String rawDataPadded = AuxUtils.b2h(padded);
        System.out.println(rawDataPadded);
        System.out.println(AuxUtils.b2h(padded2));
//
//        //2200
//        System.out.println("rawdataPadded " + rawDataPadded);
//        System.out.println("rawdataPadded " + rawDataPadded.length());
//        String result = iso9797Alg3(otpKey2, rawDataPadded);
//        System.out.println(result);

    }

}
